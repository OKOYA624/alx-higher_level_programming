#include "lists.h"

/**
* check_cycle - Checks for cycle in linked list
* @head: Head of linked list
* Return: Integer (1 if there is a cycle, 0 otherwise)
*/
int check_cycle(listint_t *head)
{
    listint_t *slow_ptr, *fast_ptr;

    if (!head)
        return (0);

    slow_ptr = fast_ptr = head;

    while (fast_ptr && fast_ptr->next)
    {
        slow_ptr = slow_ptr->next;
        fast_ptr = fast_ptr->next->next;

        if (slow_ptr == fast_ptr)
            return (1);
    }

    return (0);
}

